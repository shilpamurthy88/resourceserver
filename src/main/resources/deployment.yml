apiVersion: apps/v1
kind: Deployment
metadata:
  name: resourceserver
spec:
  selector:
    matchLabels:
      app: resourceserver-app
  template:
    metadata:
      labels:
        app: resourceserver-app
    spec:
      # For more information about using Kubernetes service accounts see:
      # https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts
      serviceAccountName: ksa-cloud-sql # TODO(developer): replace this value.
      containers:
        - name: resourceserver-app
          # Replace <LOCATION> with your Artifact Registry location (e.g., us-central1).
          # Replace <YOUR_PROJECT_ID> with your project ID.
          image: us-central1-docker.pkg.dev/burner-shin1/resourceserver/gke-sql:latest
          # This app listens on port 8080 for web traffic by default.
          ports:
            - containerPort: 8082
          env:
            - name: PORT
              value: "8082"
            - name: INSTANCE_CONNECTION_NAME
              value: burner-shin1:us-central1:shilpa-test
            - name: DB_HOST
              value: "127.0.0.1"
            - name: DB_PORT
              value: "3306"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: gke-cloud-sql-secrets
                  key: username
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: gke-cloud-sql-secrets
                  key: password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: gke-cloud-sql-secrets
                  key: database
        - name: cloud-sql-proxy
          # It is recommended to use the latest version of the Cloud SQL proxy
          # Make sure to update on a regular schedule!
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.0.0  # make sure to use the latest version
          args:
            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            # - "--private-ip"

            # Enable structured logging with LogEntry format:
            - "--structured-logs"

            # Replace DB_PORT with the port the proxy should listen on
            - "--port=3306"
            - "burner-shin1:us-central1:shilpa-test"

          securityContext:
            # The default Cloud SQL proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true
          # You should use resource requests/limits as a best practice to prevent
          # pods from consuming too many resources and affecting the execution of
          # other pods. You should adjust the following values based on what your
          # application needs. For details, see
          # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            requests:
              # The proxy's memory use scales linearly with the number of active
              # connections. Fewer open connections will use less memory. Adjust
              # this value based on your application's requirements.
              memory: "2Gi"
              # The proxy's CPU use scales linearly with the amount of IO between
              # the database and the application. Adjust this value based on your
              # application's requirements.
              cpu: "1"